import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	repositories {
		maven { url = "https://maven.minecraftforge.net" }
		maven { url = "https://repo.spongepowered.org/repository/maven-public" }
	}
	dependencies {
		//TODO: Proper dependency fix somehow that does not depend FG versions prior to 5.1.70..
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.69"//, changing: true
		classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

def modId = project.modName.toLowerCase()
group = "${project.groupName}.${modId}"
def loadingPlugin = "${group}.${project.modName}LoadingPlugin"
archivesBaseName = project.modName

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava.options.encoding = "UTF-8"

def copyDir = "$compileJava.temporaryDir/replaced"
task tokenReplace(type: Sync) {
	from(sourceSets.main.java.sourceDirectories)
	into copyDir
	filter(ReplaceTokens, tokens: [
			VERSION: project.version,
			MODNAME: project.modName,
			MODID  : modId,
	])
}
compileJava.setSource(copyDir)
compileJava.dependsOn(tokenReplace)

sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir

minecraft {
	mappings channel: "stable", version: "39-1.12"
	accessTransformer = file("src/main/resources/at.conf")
	runs {
		client {
			workingDirectory project.file("run")

			property "fml.coreMods.load", loadingPlugin
			property "mixin.debug.export", "true"
			property "mixin.debug.verbose", "true"
		}
	}
}

configurations {
	jarLibs
	implementation.extendsFrom jarLibs
}

repositories {
	maven { url = "https://repo.spongepowered.org/repository/maven-public" }
	maven { url = "https://cursemaven.com"; content { includeGroup "curse.maven" } }
}

dependencies {
	minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"

	jarLibs "org.spongepowered:mixin:0.8.3"
	annotationProcessor "org.spongepowered:mixin:0.8.3:processor"
	compileOnly fg.deobf("curse.maven:renderlib-624967:4168831")
}

mixin {
	add sourceSets.main, "mixins.${modId}.refmap.json"
}

jar {
	manifest.attributes(
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
			"FMLCorePluginContainsFMLMod": true,
			"FMLCorePlugin": loadingPlugin,
			"ForceLoadAsMod": true,
	)

	from(configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
	}
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	inputs.property "modName", project.modName
	inputs.property "modId", modId
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "modName": project.modName, "modId": modId, "version": project.version
	}
}
