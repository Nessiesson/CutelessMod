plugins {
	id "java"
	id "xyz.wagyourtail.unimined" version "1.4.1"
}

def modId = project.modName.toLowerCase()
group = "${project.groupName}.${modId}"
def loadingPlugin = "${group}.${project.modName}LoadingPlugin"
base.archivesName = project.modName

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

configurations {
	jarLibs
	implementation.extendsFrom jarLibs
}

unimined.minecraft {
	version "1.12.2"
	mappings {
		searge()
		mcp("stable", "39-1.12")
	}

	minecraftForge {
		loader "14.23.5.2860"
		mixinConfig "mixins.${modId}.json", "mixins.${modId}.chunk_display.json", "mixins.${modId}.clientcommands.json", "mixins.${modId}.nothirium.json", "mixins.${modId}.optifine.json"
		accessTransformer file("src/main/resources/at.conf")
	}

	runs.config("client") {
		systemProperty "fml.coreMods.load", loadingPlugin
		systemProperty "mixin.debug.export", "true"
		systemProperty "mixin.debug.verbose", "true"
	}

	runs.config("server") {
		enabled = false
	}
}

repositories {
	maven { url = "https://maven.wagyourtail.xyz/releases" }
	maven { url = "https://repo.spongepowered.org/repository/maven-public" }
	maven { url = "https://cursemaven.com"; content { includeGroup "curse.maven" } }
	mavenCentral()
}

dependencies {
	implementation "org.spongepowered:mixin:0.8.7"
	modImplementation("curse.maven:renderlib-624967:4168831")
}

jar {
	manifest.attributes(
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
			"FMLCorePluginContainsFMLMod": true,
			"FMLCorePlugin": loadingPlugin,
			"ForceLoadAsMod": true,
	)

	from(configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
	}
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version
	}
}

def hostLdPath = System.getenv("LD_LIBRARY_PATH") ?: ""
tasks.withType(JavaExec).configureEach { JavaExec exec ->
	exec.environment "LD_LIBRARY_PATH", hostLdPath + ":/run/current-system/sw/lib"
	exec.environment "__GL_THREADED_OPTIMIZATIONS", "0"
}
